{"ast":null,"code":"var _jsxFileName = \"/Users/jessebarnes/expenseMaster/frontend/src/components/pages/charts/StackedAreaChart.js\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card, CardBody } from 'reactstrap'; // StackedAreaChart\n\nconst StackedAreaChart = () => {\n  const apexAreaChart2Opts = {\n    chart: {\n      height: 422,\n      type: 'area',\n      stacked: true,\n      events: {\n        selection: function (chart, e) {\n          console.log(new Date(e.xaxis.min));\n        }\n      }\n    },\n    colors: ['#5369f8', '#43d39e', '#f77e53', '#1ce1ac', '#25c2e3', '#ffbe0b'],\n    dataLabels: {\n      enabled: false\n    },\n    tooltip: {\n      theme: 'dark',\n      x: {\n        show: false\n      }\n    },\n    stroke: {\n      width: 2,\n      curve: 'smooth'\n    },\n    fill: {\n      gradient: {\n        enabled: true,\n        opacityFrom: 0.6,\n        opacityTo: 0.8\n      }\n    },\n    legend: {\n      position: 'top',\n      horizontalAlign: 'left'\n    },\n    xaxis: {\n      type: 'datetime'\n    },\n    grid: {\n      row: {\n        colors: ['transparent', 'transparent'],\n        // takes an array which will be repeated on columns\n        opacity: 0.2\n      },\n      borderColor: '#f1f3fa'\n    },\n    responsive: [{\n      breakpoint: 600,\n      options: {\n        chart: {\n          toolbar: {\n            show: false\n          }\n        }\n      }\n    }]\n  };\n\n  const generateDayWiseTimeSeries = (baseval, count, yrange) => {\n    var i = 0;\n    var series = [];\n\n    while (i < count) {\n      var x = baseval;\n      var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n      series.push([x, y]);\n      baseval += 86400000;\n      i++;\n    }\n\n    return series;\n  };\n\n  const apexAreaChart2Data = [{\n    name: 'South',\n    data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n      min: 10,\n      max: 60\n    })\n  }, {\n    name: 'North',\n    data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n      min: 10,\n      max: 20\n    })\n  }, {\n    name: 'Central',\n    data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n      min: 10,\n      max: 15\n    })\n  }];\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"header-title mt-0 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Stacked Area\"), /*#__PURE__*/React.createElement(Chart, {\n    options: apexAreaChart2Opts,\n    series: apexAreaChart2Data,\n    type: \"area\",\n    className: \"apex-charts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default StackedAreaChart;","map":{"version":3,"sources":["/Users/jessebarnes/expenseMaster/frontend/src/components/pages/charts/StackedAreaChart.js"],"names":["React","Chart","Card","CardBody","StackedAreaChart","apexAreaChart2Opts","chart","height","type","stacked","events","selection","e","console","log","Date","xaxis","min","colors","dataLabels","enabled","tooltip","theme","x","show","stroke","width","curve","fill","gradient","opacityFrom","opacityTo","legend","position","horizontalAlign","grid","row","opacity","borderColor","responsive","breakpoint","options","toolbar","generateDayWiseTimeSeries","baseval","count","yrange","i","series","y","Math","floor","random","max","push","apexAreaChart2Data","name","data","getTime"],"mappings":"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","sourcesContent":["// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card, CardBody } from 'reactstrap';\n\n// StackedAreaChart\nconst StackedAreaChart = () => {\n    const apexAreaChart2Opts = {\n        chart: {\n            height: 422,\n            type: 'area',\n            stacked: true,\n            events: {\n                selection: function(chart, e) {\n                    console.log(new Date(e.xaxis.min));\n                },\n            },\n        },\n        colors: ['#5369f8', '#43d39e', '#f77e53', '#1ce1ac', '#25c2e3', '#ffbe0b'],\n        dataLabels: {\n            enabled: false,\n        },\n        tooltip: {\n            theme: 'dark',\n            x: { show: false }\n        },\n        stroke: {\n            width: 2,\n            curve: 'smooth',\n        },\n        fill: {\n            gradient: {\n                enabled: true,\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n            },\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                },\n            },\n        ],\n    };\n\n    const generateDayWiseTimeSeries = (baseval, count, yrange) => {\n        var i = 0;\n        var series = [];\n        while (i < count) {\n            var x = baseval;\n            var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n            series.push([x, y]);\n            baseval += 86400000;\n            i++;\n        }\n        return series;\n    };\n\n    const apexAreaChart2Data = [\n        {\n            name: 'South',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 60,\n            }),\n        },\n        {\n            name: 'North',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 20,\n            }),\n        },\n\n        {\n            name: 'Central',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 15,\n            }),\n        },\n    ];\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-3\">Stacked Area</h4>\n                <Chart options={apexAreaChart2Opts} series={apexAreaChart2Data} type=\"area\" className=\"apex-charts\" />\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default StackedAreaChart;\n"]},"metadata":{},"sourceType":"module"}