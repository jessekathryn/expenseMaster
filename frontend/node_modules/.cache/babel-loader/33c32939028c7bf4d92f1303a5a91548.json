{"ast":null,"code":"var _jsxFileName = \"/Users/jessebarnes/expenseMaster/frontend/src/components/FileUploader.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card } from 'reactstrap';\nimport Dropzone from 'react-dropzone';\n\nclass FileUploader extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAcceptedFiles = files => {\n      var allFiles = files;\n\n      if (this.props.showPreview) {\n        files.map(file => Object.assign(file, {\n          preview: file['type'].split('/')[0] === 'image' ? URL.createObjectURL(file) : null,\n          formattedSize: this.formatBytes(file.size)\n        }));\n        allFiles = this.state.selectedFiles;\n        allFiles.push(...files);\n        this.setState({\n          selectedFiles: allFiles\n        });\n      }\n\n      if (this.props.onFileUpload) this.props.onFileUpload(allFiles);\n    };\n\n    this.formatBytes = (bytes, decimals) => {\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const dm = decimals < 0 ? 0 : decimals;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    };\n\n    this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\n    this.state = {\n      selectedFiles: []\n    };\n  }\n  /**\n   * Handled the accepted files and shows the preview\n   */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Dropzone, Object.assign({\n      onDrop: acceptedFiles => this.handleAcceptedFiles(acceptedFiles)\n    }, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }), ({\n      getRootProps,\n      getInputProps\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropzone text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n      className: \"dz-message py-5 needsclick\"\n    }, getRootProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"h1 text-muted uil-cloud-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }\n    }, \"Drop files here or click to upload.\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-muted font-13\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    }, \"(This is just a demo dropzone. Selected files are \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 87\n      }\n    }, \"not\"), \" actually uploaded.)\")))), this.props.showPreview && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropzone-previews mt-3\",\n      id: \"file-previews\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, this.state.selectedFiles.map((f, i) => {\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\",\n        key: i + '-file',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 41\n        }\n      }, f.preview && /*#__PURE__*/React.createElement(Col, {\n        className: \"col-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        \"data-dz-thumbnail\": \"\",\n        className: \"avatar-sm rounded bg-light\",\n        alt: f.name,\n        src: f.preview,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 53\n        }\n      })), !f.preview && /*#__PURE__*/React.createElement(Col, {\n        className: \"col-auto\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"avatar-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"avatar-title bg-primary rounded\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 57\n        }\n      }, f.type.split('/')[0]))), /*#__PURE__*/React.createElement(Col, {\n        className: \"pl-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"#\",\n        className: \"text-muted font-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 49\n        }\n      }, f.name), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 53\n        }\n      }, f.formattedSize))))));\n    })));\n  }\n\n}\n\nFileUploader.defaultProps = {\n  showPreview: true\n};\nexport default FileUploader;","map":{"version":3,"sources":["/Users/jessebarnes/expenseMaster/frontend/src/components/FileUploader.js"],"names":["React","Component","Link","Row","Col","Card","Dropzone","FileUploader","constructor","props","handleAcceptedFiles","files","allFiles","showPreview","map","file","Object","assign","preview","split","URL","createObjectURL","formattedSize","formatBytes","size","state","selectedFiles","push","setState","onFileUpload","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","bind","render","acceptedFiles","getRootProps","getInputProps","f","name","type","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card } from 'reactstrap';\nimport Dropzone from 'react-dropzone';\n\n\nclass FileUploader extends Component {\n    static defaultProps = {\n        showPreview: true,\n    };\n\n    constructor(props) {\n        super(props);\n        this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\n\n        this.state = {\n            selectedFiles: [],\n        };\n    }\n\n    /**\n     * Handled the accepted files and shows the preview\n     */\n    handleAcceptedFiles = (files) => {\n        var allFiles = files;\n\n        if (this.props.showPreview) {\n            files.map(file =>\n                Object.assign(file, {\n                    preview: file['type'].split('/')[0] === 'image' ? URL.createObjectURL(file) : null,\n                    formattedSize: this.formatBytes(file.size),\n                })\n            );\n\n            allFiles = this.state.selectedFiles;\n            allFiles.push(...files);\n            this.setState({ selectedFiles: allFiles });\n        }\n\n        if (this.props.onFileUpload) this.props.onFileUpload(allFiles);\n    };\n\n    /**\n     * Formats the size\n     */\n    formatBytes = (bytes, decimals) => {\n        if (bytes === 0) return '0 Bytes';\n        const k = 1024;\n        const dm = decimals < 0 ? 0 : decimals;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <Dropzone onDrop={acceptedFiles => this.handleAcceptedFiles(acceptedFiles)} {...this.props}>\n                    {({ getRootProps, getInputProps }) => (\n                        <div className=\"dropzone text-center\">\n                            <div className=\"dz-message py-5 needsclick\" {...getRootProps()}>\n                                <input {...getInputProps()} />\n                                <i className=\"h1 text-muted uil-cloud-upload\"></i>\n                                <h3>Drop files here or click to upload.</h3>\n                                <span className=\"text-muted font-13\">\n                                    (This is just a demo dropzone. Selected files are <strong>not</strong> actually\n                                    uploaded.)\n                                </span>\n                            </div>\n                        </div>\n                    )}\n                </Dropzone>\n\n                {this.props.showPreview && (\n                    <div className=\"dropzone-previews mt-3\" id=\"file-previews\">\n                        {this.state.selectedFiles.map((f, i) => {\n                            return (\n                                <Card\n                                    className=\"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\"\n                                    key={i + '-file'}>\n                                    <div className=\"p-2\">\n                                        <Row className=\"align-items-center\">\n                                            {f.preview && (\n                                                <Col className=\"col-auto\">\n                                                    <img\n                                                        data-dz-thumbnail=\"\"\n                                                        className=\"avatar-sm rounded bg-light\"\n                                                        alt={f.name}\n                                                        src={f.preview}\n                                                    />\n                                                </Col>\n                                            )}\n                                            {!f.preview && (\n                                                <Col className=\"col-auto\">\n                                                    <div className=\"avatar-sm\">\n                                                        <span className=\"avatar-title bg-primary rounded\">\n                                                            {f.type.split('/')[0]}\n                                                        </span>\n                                                    </div>\n                                                </Col>\n                                            )}\n                                            <Col className=\"pl-0\">\n                                                <Link to=\"#\" className=\"text-muted font-weight-bold\">\n                                                    {f.name}\n                                                </Link>\n                                                <p className=\"mb-0\">\n                                                    <strong>{f.formattedSize}</strong>\n                                                </p>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </Card>\n                            );\n                        })}\n                    </div>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default FileUploader;\n"]},"metadata":{},"sourceType":"module"}