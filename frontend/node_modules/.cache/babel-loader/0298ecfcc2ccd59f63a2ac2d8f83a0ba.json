{"ast":null,"code":"var _jsxFileName = \"/Users/jessebarnes/expenseMaster/frontend/src/components/pages/uikit/BSComponents/Spinners.js\";\nimport React from 'react';\nimport { Row, Col, Card, CardBody, Spinner } from 'reactstrap';\nconst colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info'];\n\nconst BorderedSpinners = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-size-15 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \"Border spinner\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"Use the border spinners for a lightweight loading indicator.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, colors.map((color, index) => {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      key: index,\n      className: \"m-2\",\n      color: color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 28\n      }\n    });\n  })));\n};\n\nconst GrowingSpinners = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"font-size-15 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Growing spinner\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"If you don\\u2019t fancy a border spinner, switch to the grow spinner. While it doesn\\u2019t technically spin, it does repeatedly grow!\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, colors.map((color, index) => {\n    return /*#__PURE__*/React.createElement(Spinner, {\n      key: index,\n      className: \"m-2\",\n      type: \"grow\",\n      color: color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 28\n      }\n    });\n  })));\n};\n\nconst Spinners = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-3 mt-0 header-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Spinners\"), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BorderedSpinners, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xl: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(GrowingSpinners, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nexport default Spinners;","map":{"version":3,"sources":["/Users/jessebarnes/expenseMaster/frontend/src/components/pages/uikit/BSComponents/Spinners.js"],"names":["React","Row","Col","Card","CardBody","Spinner","colors","BorderedSpinners","map","color","index","GrowingSpinners","Spinners"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,QAAzB,EAAmCC,OAAnC,QAAkD,YAAlD;AAEA,MAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,WAAZ,EAAyB,SAAzB,EAAoC,QAApC,EAA8C,SAA9C,EAAyD,MAAzD,CAAf;;AAGA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKD,MAAM,CAACE,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1B,wBAAO,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,KAAd;AAAqB,MAAA,SAAS,EAAC,KAA/B;AAAqC,MAAA,KAAK,EAAED,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFA,CAFL,CAJJ,CADJ;AAaH,CAdD;;AAgBA,MAAME,eAAe,GAAG,MAAM;AAC1B,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8IAFJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKL,MAAM,CAACE,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1B,wBAAO,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEA,KAAd;AAAqB,MAAA,SAAS,EAAC,KAA/B;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAiD,MAAA,KAAK,EAAED,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFA,CAFL,CAJJ,CADJ;AAaH,CAdD;;AAgBA,MAAMG,QAAQ,GAAG,MAAM;AAEnB,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAKI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,CAHJ,CADJ,CADJ,CADJ;AAmBH,CArBD;;AAuBA,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, CardBody, Spinner } from 'reactstrap';\n\nconst colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info'];\n\n\nconst BorderedSpinners = () => {\n    return (\n        <React.Fragment>\n            <h5 className=\"font-size-15 mb-1\">Border spinner</h5>\n            <p className=\"sub-header\">Use the border spinners for a lightweight loading indicator.</p>\n\n            <div>\n\n                {colors.map((color, index) => {\n                    return <Spinner key={index} className=\"m-2\" color={color} />;\n                })}\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst GrowingSpinners = () => {\n    return (\n        <React.Fragment>\n            <h5 className=\"font-size-15 mb-1\">Growing spinner</h5>\n            <p className=\"sub-header\">If you don’t fancy a border spinner, switch to the grow spinner. While it doesn’t technically spin, it does repeatedly grow!</p>\n\n            <div>\n\n                {colors.map((color, index) => {\n                    return <Spinner key={index} className=\"m-2\" type=\"grow\" color={color} />;\n                })}\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst Spinners = () => {\n\n    return (\n        <React.Fragment>\n            <Card>\n                <CardBody>\n                    <h4 className=\"mb-3 mt-0 header-title\">Spinners</h4>\n\n                    <Row>\n                        <Col xl={6}>\n                            <BorderedSpinners />\n                        </Col>\n\n                        <Col xl={6}>\n                            <GrowingSpinners />\n                        </Col>\n                    </Row>\n                </CardBody>\n            </Card>\n        </React.Fragment>\n    );\n};\n\nexport default Spinners;\n"]},"metadata":{},"sourceType":"module"}