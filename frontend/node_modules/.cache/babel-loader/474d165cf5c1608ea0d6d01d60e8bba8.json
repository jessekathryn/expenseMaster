{"ast":null,"code":"var _jsxFileName = \"/Users/jessebarnes/expenseMaster/frontend/src/pages/other/Profile/Tasks.js\";\nimport React from 'react';\nimport { Row, Col, Card, CardBody, UncontrolledTooltip, CustomInput } from 'reactstrap';\nimport classNames from 'classnames';\nimport { allTasks } from './Data';\n\nconst TaskSummary = task => {\n  const clickHandler = task.onClickHandler || {};\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: classNames('justify-content-sm-between', 'border-bottom', 'mt-2', 'pt-2', 'cursor-pointer'),\n    onClick: () => clickHandler(task),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    className: \"mb-lg-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CustomInput, {\n    type: \"checkbox\",\n    id: `task-${task.id}`,\n    label: task.title,\n    defaultChecked: task.completed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-sm-flex justify-content-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: task.assignee_avatar,\n    alt: \"\",\n    className: \"avatar-xs rounded-circle\",\n    id: `task-avt-${task.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(UncontrolledTooltip, {\n    placement: \"bottom\",\n    target: `task-avt-${task.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 25\n    }\n  }, \"Assigned to \", task.assigned_to)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-3 mt-sm-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-inline font-13 text-sm-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item pr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"uil uil-schedule font-16 mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 67\n    }\n  }), task.due_date), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item pr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"uil uil-align-alt font-16 mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 67\n    }\n  }), task.checklists.filter(x => x.completed).length, \"/\", task.checklists.length), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item pr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"uil uil-comment-message font-16 mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 67\n    }\n  }), task.comments.length), /*#__PURE__*/React.createElement(\"li\", {\n    className: \"list-inline-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames('badge', {\n      'badge-soft-danger': task.priority === 'High',\n      'badge-soft-info': task.priority === 'Medium',\n      'badge-soft-success': task.priority === 'Low'\n    }, 'p-1'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }\n  }, task.priority))))))));\n};\n\nconst Tasks = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Tasks\"), /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-0 shadow-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, allTasks.map((task, index) => {\n    return /*#__PURE__*/React.createElement(TaskSummary, Object.assign({}, task, {\n      key: index,\n      onClickHandler: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 28\n      }\n    }));\n  }))));\n};\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/jessebarnes/expenseMaster/frontend/src/pages/other/Profile/Tasks.js"],"names":["React","Row","Col","Card","CardBody","UncontrolledTooltip","CustomInput","classNames","allTasks","TaskSummary","task","clickHandler","onClickHandler","id","title","completed","assignee_avatar","assigned_to","due_date","checklists","filter","x","length","comments","priority","Tasks","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Row, Col, Card, CardBody, UncontrolledTooltip, CustomInput\n} from 'reactstrap';\nimport classNames from 'classnames';\n\n\nimport { allTasks } from './Data';\n\n\nconst TaskSummary = (task) => {\n    const clickHandler = task.onClickHandler || {};\n\n    return <React.Fragment>\n        <Row className={classNames('justify-content-sm-between', 'border-bottom', 'mt-2', 'pt-2', 'cursor-pointer')} onClick={() => clickHandler(task)}>\n            <Col lg={6} className=\"mb-lg-0\">\n                <CustomInput type=\"checkbox\" id={`task-${task.id}`} label={task.title} defaultChecked={task.completed}></CustomInput>\n            </Col>\n            <Col lg={6}>\n                <div className=\"d-sm-flex justify-content-between\">\n                    <div>\n                        <img src={task.assignee_avatar} alt=\"\" className=\"avatar-xs rounded-circle\" id={`task-avt-${task.id}`} />\n                        <UncontrolledTooltip placement=\"bottom\" target={`task-avt-${task.id}`}>Assigned to {task.assigned_to}</UncontrolledTooltip>\n                    </div>\n\n                    <div className=\"mt-3 mt-sm-0\">\n                        <ul className=\"list-inline font-13 text-sm-right\">\n                            <li className=\"list-inline-item pr-1\"><i className='uil uil-schedule font-16 mr-1'></i>{task.due_date}</li>\n                            <li className=\"list-inline-item pr-1\"><i className='uil uil-align-alt font-16 mr-1'></i>{task.checklists.filter(x => x.completed).length}/{task.checklists.length}</li>\n                            <li className=\"list-inline-item pr-2\"><i className='uil uil-comment-message font-16 mr-1'></i>{task.comments.length}</li>\n                            <li className=\"list-inline-item\">\n                                <span className={classNames('badge', { 'badge-soft-danger': task.priority === 'High', 'badge-soft-info': task.priority === 'Medium', 'badge-soft-success': task.priority === 'Low' }, 'p-1')}>{task.priority}</span>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    </React.Fragment>\n}\n\nconst Tasks = () => {\n\n    return <React.Fragment>\n        <h5 className=\"mt-3\">Tasks</h5>\n        <Card className=\"mb-0 shadow-none\">\n            <CardBody>\n                {allTasks.map((task, index) => {\n                    return <TaskSummary {...task} key={index} onClickHandler={() => { }} />\n                })}\n            </CardBody>\n        </Card>\n    </React.Fragment>\n}\n\n\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}