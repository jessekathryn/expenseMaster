{"ast":null,"code":"/*!\nFullCalendar List View Plugin v4.4.0\nDocs & License: https://fullcalendar.io/\n(c) 2019 Adam Shaw\n*/\nimport { getAllDayHtml, isMultiDayRange, htmlEscape, FgEventRenderer, memoize, memoizeRendering, ScrollComponent, subtractInnerElHeight, sliceEventStore, intersectRanges, htmlToElement, createFormatter, createElement, buildGotoAnchorHtml, View, startOfDay, addDays, createPlugin } from '@fullcalendar/core';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar ListEventRenderer =\n/** @class */\nfunction (_super) {\n  __extends(ListEventRenderer, _super);\n\n  function ListEventRenderer(listView) {\n    var _this = _super.call(this) || this;\n\n    _this.listView = listView;\n    return _this;\n  }\n\n  ListEventRenderer.prototype.attachSegs = function (segs) {\n    if (!segs.length) {\n      this.listView.renderEmptyMessage();\n    } else {\n      this.listView.renderSegList(segs);\n    }\n  };\n\n  ListEventRenderer.prototype.detachSegs = function () {}; // generates the HTML for a single event row\n\n\n  ListEventRenderer.prototype.renderSegHtml = function (seg) {\n    var _a = this.context,\n        theme = _a.theme,\n        options = _a.options;\n    var eventRange = seg.eventRange;\n    var eventDef = eventRange.def;\n    var eventInstance = eventRange.instance;\n    var eventUi = eventRange.ui;\n    var url = eventDef.url;\n    var classes = ['fc-list-item'].concat(eventUi.classNames);\n    var bgColor = eventUi.backgroundColor;\n    var timeHtml;\n\n    if (eventDef.allDay) {\n      timeHtml = getAllDayHtml(options);\n    } else if (isMultiDayRange(eventRange.range)) {\n      if (seg.isStart) {\n        timeHtml = htmlEscape(this._getTimeText(eventInstance.range.start, seg.end, false // allDay\n        ));\n      } else if (seg.isEnd) {\n        timeHtml = htmlEscape(this._getTimeText(seg.start, eventInstance.range.end, false // allDay\n        ));\n      } else {\n        // inner segment that lasts the whole day\n        timeHtml = getAllDayHtml(options);\n      }\n    } else {\n      // Display the normal time text for the *event's* times\n      timeHtml = htmlEscape(this.getTimeText(eventRange));\n    }\n\n    if (url) {\n      classes.push('fc-has-url');\n    }\n\n    return '<tr class=\"' + classes.join(' ') + '\">' + (this.displayEventTime ? '<td class=\"fc-list-item-time ' + theme.getClass('widgetContent') + '\">' + (timeHtml || '') + '</td>' : '') + '<td class=\"fc-list-item-marker ' + theme.getClass('widgetContent') + '\">' + '<span class=\"fc-event-dot\"' + (bgColor ? ' style=\"background-color:' + bgColor + '\"' : '') + '></span>' + '</td>' + '<td class=\"fc-list-item-title ' + theme.getClass('widgetContent') + '\">' + '<a' + (url ? ' href=\"' + htmlEscape(url) + '\"' : '') + '>' + htmlEscape(eventDef.title || '') + '</a>' + '</td>' + '</tr>';\n  }; // like \"4:00am\"\n\n\n  ListEventRenderer.prototype.computeEventTimeFormat = function () {\n    return {\n      hour: 'numeric',\n      minute: '2-digit',\n      meridiem: 'short'\n    };\n  };\n\n  return ListEventRenderer;\n}(FgEventRenderer);\n/*\nResponsible for the scroller, and forwarding event-related actions into the \"grid\".\n*/\n\n\nvar ListView =\n/** @class */\nfunction (_super) {\n  __extends(ListView, _super);\n\n  function ListView(viewSpec, parentEl) {\n    var _this = _super.call(this, viewSpec, parentEl) || this;\n\n    _this.computeDateVars = memoize(computeDateVars);\n    _this.eventStoreToSegs = memoize(_this._eventStoreToSegs);\n    _this.renderSkeleton = memoizeRendering(_this._renderSkeleton, _this._unrenderSkeleton);\n    var eventRenderer = _this.eventRenderer = new ListEventRenderer(_this);\n    _this.renderContent = memoizeRendering(eventRenderer.renderSegs.bind(eventRenderer), eventRenderer.unrender.bind(eventRenderer), [_this.renderSkeleton]);\n    return _this;\n  }\n\n  ListView.prototype.firstContext = function (context) {\n    context.calendar.registerInteractiveComponent(this, {\n      el: this.el // TODO: make aware that it doesn't do Hits\n\n    });\n  };\n\n  ListView.prototype.render = function (props, context) {\n    _super.prototype.render.call(this, props, context);\n\n    var _a = this.computeDateVars(props.dateProfile),\n        dayDates = _a.dayDates,\n        dayRanges = _a.dayRanges;\n\n    this.dayDates = dayDates;\n    this.renderSkeleton(context);\n    this.renderContent(context, this.eventStoreToSegs(props.eventStore, props.eventUiBases, dayRanges));\n  };\n\n  ListView.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n\n    this.renderSkeleton.unrender();\n    this.renderContent.unrender();\n    this.context.calendar.unregisterInteractiveComponent(this);\n  };\n\n  ListView.prototype._renderSkeleton = function (context) {\n    var theme = context.theme;\n    this.el.classList.add('fc-list-view');\n    var listViewClassNames = (theme.getClass('listView') || '').split(' '); // wish we didn't have to do this\n\n    for (var _i = 0, listViewClassNames_1 = listViewClassNames; _i < listViewClassNames_1.length; _i++) {\n      var listViewClassName = listViewClassNames_1[_i];\n\n      if (listViewClassName) {\n        // in case input was empty string\n        this.el.classList.add(listViewClassName);\n      }\n    }\n\n    this.scroller = new ScrollComponent('hidden', // overflow x\n    'auto' // overflow y\n    );\n    this.el.appendChild(this.scroller.el);\n    this.contentEl = this.scroller.el; // shortcut\n  };\n\n  ListView.prototype._unrenderSkeleton = function () {\n    // TODO: remove classNames\n    this.scroller.destroy(); // will remove the Grid too\n  };\n\n  ListView.prototype.updateSize = function (isResize, viewHeight, isAuto) {\n    _super.prototype.updateSize.call(this, isResize, viewHeight, isAuto);\n\n    this.eventRenderer.computeSizes(isResize);\n    this.eventRenderer.assignSizes(isResize);\n    this.scroller.clear(); // sets height to 'auto' and clears overflow\n\n    if (!isAuto) {\n      this.scroller.setHeight(this.computeScrollerHeight(viewHeight));\n    }\n  };\n\n  ListView.prototype.computeScrollerHeight = function (viewHeight) {\n    return viewHeight - subtractInnerElHeight(this.el, this.scroller.el); // everything that's NOT the scroller\n  };\n\n  ListView.prototype._eventStoreToSegs = function (eventStore, eventUiBases, dayRanges) {\n    return this.eventRangesToSegs(sliceEventStore(eventStore, eventUiBases, this.props.dateProfile.activeRange, this.context.nextDayThreshold).fg, dayRanges);\n  };\n\n  ListView.prototype.eventRangesToSegs = function (eventRanges, dayRanges) {\n    var segs = [];\n\n    for (var _i = 0, eventRanges_1 = eventRanges; _i < eventRanges_1.length; _i++) {\n      var eventRange = eventRanges_1[_i];\n      segs.push.apply(segs, this.eventRangeToSegs(eventRange, dayRanges));\n    }\n\n    return segs;\n  };\n\n  ListView.prototype.eventRangeToSegs = function (eventRange, dayRanges) {\n    var _a = this.context,\n        dateEnv = _a.dateEnv,\n        nextDayThreshold = _a.nextDayThreshold;\n    var range = eventRange.range;\n    var allDay = eventRange.def.allDay;\n    var dayIndex;\n    var segRange;\n    var seg;\n    var segs = [];\n\n    for (dayIndex = 0; dayIndex < dayRanges.length; dayIndex++) {\n      segRange = intersectRanges(range, dayRanges[dayIndex]);\n\n      if (segRange) {\n        seg = {\n          component: this,\n          eventRange: eventRange,\n          start: segRange.start,\n          end: segRange.end,\n          isStart: eventRange.isStart && segRange.start.valueOf() === range.start.valueOf(),\n          isEnd: eventRange.isEnd && segRange.end.valueOf() === range.end.valueOf(),\n          dayIndex: dayIndex\n        };\n        segs.push(seg); // detect when range won't go fully into the next day,\n        // and mutate the latest seg to the be the end.\n\n        if (!seg.isEnd && !allDay && dayIndex + 1 < dayRanges.length && range.end < dateEnv.add(dayRanges[dayIndex + 1].start, nextDayThreshold)) {\n          seg.end = range.end;\n          seg.isEnd = true;\n          break;\n        }\n      }\n    }\n\n    return segs;\n  };\n\n  ListView.prototype.renderEmptyMessage = function () {\n    this.contentEl.innerHTML = '<div class=\"fc-list-empty-wrap2\">' + // TODO: try less wraps\n    '<div class=\"fc-list-empty-wrap1\">' + '<div class=\"fc-list-empty\">' + htmlEscape(this.context.options.noEventsMessage) + '</div>' + '</div>' + '</div>';\n  }; // called by ListEventRenderer\n\n\n  ListView.prototype.renderSegList = function (allSegs) {\n    var theme = this.context.theme;\n    var segsByDay = this.groupSegsByDay(allSegs); // sparse array\n\n    var dayIndex;\n    var daySegs;\n    var i;\n    var tableEl = htmlToElement('<table class=\"fc-list-table ' + theme.getClass('tableList') + '\"><tbody></tbody></table>');\n    var tbodyEl = tableEl.querySelector('tbody');\n\n    for (dayIndex = 0; dayIndex < segsByDay.length; dayIndex++) {\n      daySegs = segsByDay[dayIndex];\n\n      if (daySegs) {\n        // sparse array, so might be undefined\n        // append a day header\n        tbodyEl.appendChild(this.buildDayHeaderRow(this.dayDates[dayIndex]));\n        daySegs = this.eventRenderer.sortEventSegs(daySegs);\n\n        for (i = 0; i < daySegs.length; i++) {\n          tbodyEl.appendChild(daySegs[i].el); // append event row\n        }\n      }\n    }\n\n    this.contentEl.innerHTML = '';\n    this.contentEl.appendChild(tableEl);\n  }; // Returns a sparse array of arrays, segs grouped by their dayIndex\n\n\n  ListView.prototype.groupSegsByDay = function (segs) {\n    var segsByDay = []; // sparse array\n\n    var i;\n    var seg;\n\n    for (i = 0; i < segs.length; i++) {\n      seg = segs[i];\n      (segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = [])).push(seg);\n    }\n\n    return segsByDay;\n  }; // generates the HTML for the day headers that live amongst the event rows\n\n\n  ListView.prototype.buildDayHeaderRow = function (dayDate) {\n    var _a = this.context,\n        theme = _a.theme,\n        dateEnv = _a.dateEnv,\n        options = _a.options;\n    var mainFormat = createFormatter(options.listDayFormat); // TODO: cache\n\n    var altFormat = createFormatter(options.listDayAltFormat); // TODO: cache\n\n    return createElement('tr', {\n      className: 'fc-list-heading',\n      'data-date': dateEnv.formatIso(dayDate, {\n        omitTime: true\n      })\n    }, '<td class=\"' + (theme.getClass('tableListHeading') || theme.getClass('widgetHeader')) + '\" colspan=\"3\">' + (mainFormat ? buildGotoAnchorHtml(options, dateEnv, dayDate, {\n      'class': 'fc-list-heading-main'\n    }, htmlEscape(dateEnv.format(dayDate, mainFormat)) // inner HTML\n    ) : '') + (altFormat ? buildGotoAnchorHtml(options, dateEnv, dayDate, {\n      'class': 'fc-list-heading-alt'\n    }, htmlEscape(dateEnv.format(dayDate, altFormat)) // inner HTML\n    ) : '') + '</td>');\n  };\n\n  return ListView;\n}(View);\n\nListView.prototype.fgSegSelector = '.fc-list-item'; // which elements accept event actions\n\nfunction computeDateVars(dateProfile) {\n  var dayStart = startOfDay(dateProfile.renderRange.start);\n  var viewEnd = dateProfile.renderRange.end;\n  var dayDates = [];\n  var dayRanges = [];\n\n  while (dayStart < viewEnd) {\n    dayDates.push(dayStart);\n    dayRanges.push({\n      start: dayStart,\n      end: addDays(dayStart, 1)\n    });\n    dayStart = addDays(dayStart, 1);\n  }\n\n  return {\n    dayDates: dayDates,\n    dayRanges: dayRanges\n  };\n}\n\nvar main = createPlugin({\n  views: {\n    list: {\n      class: ListView,\n      buttonTextKey: 'list',\n      listDayFormat: {\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric'\n      } // like \"January 1, 2016\"\n\n    },\n    listDay: {\n      type: 'list',\n      duration: {\n        days: 1\n      },\n      listDayFormat: {\n        weekday: 'long'\n      } // day-of-week is all we need. full date is probably in header\n\n    },\n    listWeek: {\n      type: 'list',\n      duration: {\n        weeks: 1\n      },\n      listDayFormat: {\n        weekday: 'long'\n      },\n      listDayAltFormat: {\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric'\n      }\n    },\n    listMonth: {\n      type: 'list',\n      duration: {\n        month: 1\n      },\n      listDayAltFormat: {\n        weekday: 'long'\n      } // day-of-week is nice-to-have\n\n    },\n    listYear: {\n      type: 'list',\n      duration: {\n        year: 1\n      },\n      listDayAltFormat: {\n        weekday: 'long'\n      } // day-of-week is nice-to-have\n\n    }\n  }\n});\nexport default main;\nexport { ListView };","map":{"version":3,"sources":["/Users/jessebarnes/expenseMaster/frontend/node_modules/@fullcalendar/list/main.esm.js"],"names":["getAllDayHtml","isMultiDayRange","htmlEscape","FgEventRenderer","memoize","memoizeRendering","ScrollComponent","subtractInnerElHeight","sliceEventStore","intersectRanges","htmlToElement","createFormatter","createElement","buildGotoAnchorHtml","View","startOfDay","addDays","createPlugin","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","ListEventRenderer","_super","listView","_this","call","attachSegs","segs","length","renderEmptyMessage","renderSegList","detachSegs","renderSegHtml","seg","_a","context","theme","options","eventRange","eventDef","def","eventInstance","instance","eventUi","ui","url","classes","concat","classNames","bgColor","backgroundColor","timeHtml","allDay","range","isStart","_getTimeText","start","end","isEnd","getTimeText","push","join","displayEventTime","getClass","title","computeEventTimeFormat","hour","minute","meridiem","ListView","viewSpec","parentEl","computeDateVars","eventStoreToSegs","_eventStoreToSegs","renderSkeleton","_renderSkeleton","_unrenderSkeleton","eventRenderer","renderContent","renderSegs","bind","unrender","firstContext","calendar","registerInteractiveComponent","el","render","props","dateProfile","dayDates","dayRanges","eventStore","eventUiBases","destroy","unregisterInteractiveComponent","classList","add","listViewClassNames","split","_i","listViewClassNames_1","listViewClassName","scroller","appendChild","contentEl","updateSize","isResize","viewHeight","isAuto","computeSizes","assignSizes","clear","setHeight","computeScrollerHeight","eventRangesToSegs","activeRange","nextDayThreshold","fg","eventRanges","eventRanges_1","apply","eventRangeToSegs","dateEnv","dayIndex","segRange","component","valueOf","innerHTML","noEventsMessage","allSegs","segsByDay","groupSegsByDay","daySegs","i","tableEl","tbodyEl","querySelector","buildDayHeaderRow","sortEventSegs","dayDate","mainFormat","listDayFormat","altFormat","listDayAltFormat","className","formatIso","omitTime","format","fgSegSelector","dayStart","renderRange","viewEnd","main","views","list","class","buttonTextKey","month","day","year","listDay","type","duration","days","weekday","listWeek","weeks","listMonth","listYear"],"mappings":"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","sourcesContent":["/*!\nFullCalendar List View Plugin v4.4.0\nDocs & License: https://fullcalendar.io/\n(c) 2019 Adam Shaw\n*/\n\nimport { getAllDayHtml, isMultiDayRange, htmlEscape, FgEventRenderer, memoize, memoizeRendering, ScrollComponent, subtractInnerElHeight, sliceEventStore, intersectRanges, htmlToElement, createFormatter, createElement, buildGotoAnchorHtml, View, startOfDay, addDays, createPlugin } from '@fullcalendar/core';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\nvar ListEventRenderer = /** @class */ (function (_super) {\n    __extends(ListEventRenderer, _super);\n    function ListEventRenderer(listView) {\n        var _this = _super.call(this) || this;\n        _this.listView = listView;\n        return _this;\n    }\n    ListEventRenderer.prototype.attachSegs = function (segs) {\n        if (!segs.length) {\n            this.listView.renderEmptyMessage();\n        }\n        else {\n            this.listView.renderSegList(segs);\n        }\n    };\n    ListEventRenderer.prototype.detachSegs = function () {\n    };\n    // generates the HTML for a single event row\n    ListEventRenderer.prototype.renderSegHtml = function (seg) {\n        var _a = this.context, theme = _a.theme, options = _a.options;\n        var eventRange = seg.eventRange;\n        var eventDef = eventRange.def;\n        var eventInstance = eventRange.instance;\n        var eventUi = eventRange.ui;\n        var url = eventDef.url;\n        var classes = ['fc-list-item'].concat(eventUi.classNames);\n        var bgColor = eventUi.backgroundColor;\n        var timeHtml;\n        if (eventDef.allDay) {\n            timeHtml = getAllDayHtml(options);\n        }\n        else if (isMultiDayRange(eventRange.range)) {\n            if (seg.isStart) {\n                timeHtml = htmlEscape(this._getTimeText(eventInstance.range.start, seg.end, false // allDay\n                ));\n            }\n            else if (seg.isEnd) {\n                timeHtml = htmlEscape(this._getTimeText(seg.start, eventInstance.range.end, false // allDay\n                ));\n            }\n            else { // inner segment that lasts the whole day\n                timeHtml = getAllDayHtml(options);\n            }\n        }\n        else {\n            // Display the normal time text for the *event's* times\n            timeHtml = htmlEscape(this.getTimeText(eventRange));\n        }\n        if (url) {\n            classes.push('fc-has-url');\n        }\n        return '<tr class=\"' + classes.join(' ') + '\">' +\n            (this.displayEventTime ?\n                '<td class=\"fc-list-item-time ' + theme.getClass('widgetContent') + '\">' +\n                    (timeHtml || '') +\n                    '</td>' :\n                '') +\n            '<td class=\"fc-list-item-marker ' + theme.getClass('widgetContent') + '\">' +\n            '<span class=\"fc-event-dot\"' +\n            (bgColor ?\n                ' style=\"background-color:' + bgColor + '\"' :\n                '') +\n            '></span>' +\n            '</td>' +\n            '<td class=\"fc-list-item-title ' + theme.getClass('widgetContent') + '\">' +\n            '<a' + (url ? ' href=\"' + htmlEscape(url) + '\"' : '') + '>' +\n            htmlEscape(eventDef.title || '') +\n            '</a>' +\n            '</td>' +\n            '</tr>';\n    };\n    // like \"4:00am\"\n    ListEventRenderer.prototype.computeEventTimeFormat = function () {\n        return {\n            hour: 'numeric',\n            minute: '2-digit',\n            meridiem: 'short'\n        };\n    };\n    return ListEventRenderer;\n}(FgEventRenderer));\n\n/*\nResponsible for the scroller, and forwarding event-related actions into the \"grid\".\n*/\nvar ListView = /** @class */ (function (_super) {\n    __extends(ListView, _super);\n    function ListView(viewSpec, parentEl) {\n        var _this = _super.call(this, viewSpec, parentEl) || this;\n        _this.computeDateVars = memoize(computeDateVars);\n        _this.eventStoreToSegs = memoize(_this._eventStoreToSegs);\n        _this.renderSkeleton = memoizeRendering(_this._renderSkeleton, _this._unrenderSkeleton);\n        var eventRenderer = _this.eventRenderer = new ListEventRenderer(_this);\n        _this.renderContent = memoizeRendering(eventRenderer.renderSegs.bind(eventRenderer), eventRenderer.unrender.bind(eventRenderer), [_this.renderSkeleton]);\n        return _this;\n    }\n    ListView.prototype.firstContext = function (context) {\n        context.calendar.registerInteractiveComponent(this, {\n            el: this.el\n            // TODO: make aware that it doesn't do Hits\n        });\n    };\n    ListView.prototype.render = function (props, context) {\n        _super.prototype.render.call(this, props, context);\n        var _a = this.computeDateVars(props.dateProfile), dayDates = _a.dayDates, dayRanges = _a.dayRanges;\n        this.dayDates = dayDates;\n        this.renderSkeleton(context);\n        this.renderContent(context, this.eventStoreToSegs(props.eventStore, props.eventUiBases, dayRanges));\n    };\n    ListView.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this.renderSkeleton.unrender();\n        this.renderContent.unrender();\n        this.context.calendar.unregisterInteractiveComponent(this);\n    };\n    ListView.prototype._renderSkeleton = function (context) {\n        var theme = context.theme;\n        this.el.classList.add('fc-list-view');\n        var listViewClassNames = (theme.getClass('listView') || '').split(' '); // wish we didn't have to do this\n        for (var _i = 0, listViewClassNames_1 = listViewClassNames; _i < listViewClassNames_1.length; _i++) {\n            var listViewClassName = listViewClassNames_1[_i];\n            if (listViewClassName) { // in case input was empty string\n                this.el.classList.add(listViewClassName);\n            }\n        }\n        this.scroller = new ScrollComponent('hidden', // overflow x\n        'auto' // overflow y\n        );\n        this.el.appendChild(this.scroller.el);\n        this.contentEl = this.scroller.el; // shortcut\n    };\n    ListView.prototype._unrenderSkeleton = function () {\n        // TODO: remove classNames\n        this.scroller.destroy(); // will remove the Grid too\n    };\n    ListView.prototype.updateSize = function (isResize, viewHeight, isAuto) {\n        _super.prototype.updateSize.call(this, isResize, viewHeight, isAuto);\n        this.eventRenderer.computeSizes(isResize);\n        this.eventRenderer.assignSizes(isResize);\n        this.scroller.clear(); // sets height to 'auto' and clears overflow\n        if (!isAuto) {\n            this.scroller.setHeight(this.computeScrollerHeight(viewHeight));\n        }\n    };\n    ListView.prototype.computeScrollerHeight = function (viewHeight) {\n        return viewHeight -\n            subtractInnerElHeight(this.el, this.scroller.el); // everything that's NOT the scroller\n    };\n    ListView.prototype._eventStoreToSegs = function (eventStore, eventUiBases, dayRanges) {\n        return this.eventRangesToSegs(sliceEventStore(eventStore, eventUiBases, this.props.dateProfile.activeRange, this.context.nextDayThreshold).fg, dayRanges);\n    };\n    ListView.prototype.eventRangesToSegs = function (eventRanges, dayRanges) {\n        var segs = [];\n        for (var _i = 0, eventRanges_1 = eventRanges; _i < eventRanges_1.length; _i++) {\n            var eventRange = eventRanges_1[_i];\n            segs.push.apply(segs, this.eventRangeToSegs(eventRange, dayRanges));\n        }\n        return segs;\n    };\n    ListView.prototype.eventRangeToSegs = function (eventRange, dayRanges) {\n        var _a = this.context, dateEnv = _a.dateEnv, nextDayThreshold = _a.nextDayThreshold;\n        var range = eventRange.range;\n        var allDay = eventRange.def.allDay;\n        var dayIndex;\n        var segRange;\n        var seg;\n        var segs = [];\n        for (dayIndex = 0; dayIndex < dayRanges.length; dayIndex++) {\n            segRange = intersectRanges(range, dayRanges[dayIndex]);\n            if (segRange) {\n                seg = {\n                    component: this,\n                    eventRange: eventRange,\n                    start: segRange.start,\n                    end: segRange.end,\n                    isStart: eventRange.isStart && segRange.start.valueOf() === range.start.valueOf(),\n                    isEnd: eventRange.isEnd && segRange.end.valueOf() === range.end.valueOf(),\n                    dayIndex: dayIndex\n                };\n                segs.push(seg);\n                // detect when range won't go fully into the next day,\n                // and mutate the latest seg to the be the end.\n                if (!seg.isEnd && !allDay &&\n                    dayIndex + 1 < dayRanges.length &&\n                    range.end <\n                        dateEnv.add(dayRanges[dayIndex + 1].start, nextDayThreshold)) {\n                    seg.end = range.end;\n                    seg.isEnd = true;\n                    break;\n                }\n            }\n        }\n        return segs;\n    };\n    ListView.prototype.renderEmptyMessage = function () {\n        this.contentEl.innerHTML =\n            '<div class=\"fc-list-empty-wrap2\">' + // TODO: try less wraps\n                '<div class=\"fc-list-empty-wrap1\">' +\n                '<div class=\"fc-list-empty\">' +\n                htmlEscape(this.context.options.noEventsMessage) +\n                '</div>' +\n                '</div>' +\n                '</div>';\n    };\n    // called by ListEventRenderer\n    ListView.prototype.renderSegList = function (allSegs) {\n        var theme = this.context.theme;\n        var segsByDay = this.groupSegsByDay(allSegs); // sparse array\n        var dayIndex;\n        var daySegs;\n        var i;\n        var tableEl = htmlToElement('<table class=\"fc-list-table ' + theme.getClass('tableList') + '\"><tbody></tbody></table>');\n        var tbodyEl = tableEl.querySelector('tbody');\n        for (dayIndex = 0; dayIndex < segsByDay.length; dayIndex++) {\n            daySegs = segsByDay[dayIndex];\n            if (daySegs) { // sparse array, so might be undefined\n                // append a day header\n                tbodyEl.appendChild(this.buildDayHeaderRow(this.dayDates[dayIndex]));\n                daySegs = this.eventRenderer.sortEventSegs(daySegs);\n                for (i = 0; i < daySegs.length; i++) {\n                    tbodyEl.appendChild(daySegs[i].el); // append event row\n                }\n            }\n        }\n        this.contentEl.innerHTML = '';\n        this.contentEl.appendChild(tableEl);\n    };\n    // Returns a sparse array of arrays, segs grouped by their dayIndex\n    ListView.prototype.groupSegsByDay = function (segs) {\n        var segsByDay = []; // sparse array\n        var i;\n        var seg;\n        for (i = 0; i < segs.length; i++) {\n            seg = segs[i];\n            (segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = []))\n                .push(seg);\n        }\n        return segsByDay;\n    };\n    // generates the HTML for the day headers that live amongst the event rows\n    ListView.prototype.buildDayHeaderRow = function (dayDate) {\n        var _a = this.context, theme = _a.theme, dateEnv = _a.dateEnv, options = _a.options;\n        var mainFormat = createFormatter(options.listDayFormat); // TODO: cache\n        var altFormat = createFormatter(options.listDayAltFormat); // TODO: cache\n        return createElement('tr', {\n            className: 'fc-list-heading',\n            'data-date': dateEnv.formatIso(dayDate, { omitTime: true })\n        }, '<td class=\"' + (theme.getClass('tableListHeading') ||\n            theme.getClass('widgetHeader')) + '\" colspan=\"3\">' +\n            (mainFormat ?\n                buildGotoAnchorHtml(options, dateEnv, dayDate, { 'class': 'fc-list-heading-main' }, htmlEscape(dateEnv.format(dayDate, mainFormat)) // inner HTML\n                ) :\n                '') +\n            (altFormat ?\n                buildGotoAnchorHtml(options, dateEnv, dayDate, { 'class': 'fc-list-heading-alt' }, htmlEscape(dateEnv.format(dayDate, altFormat)) // inner HTML\n                ) :\n                '') +\n            '</td>');\n    };\n    return ListView;\n}(View));\nListView.prototype.fgSegSelector = '.fc-list-item'; // which elements accept event actions\nfunction computeDateVars(dateProfile) {\n    var dayStart = startOfDay(dateProfile.renderRange.start);\n    var viewEnd = dateProfile.renderRange.end;\n    var dayDates = [];\n    var dayRanges = [];\n    while (dayStart < viewEnd) {\n        dayDates.push(dayStart);\n        dayRanges.push({\n            start: dayStart,\n            end: addDays(dayStart, 1)\n        });\n        dayStart = addDays(dayStart, 1);\n    }\n    return { dayDates: dayDates, dayRanges: dayRanges };\n}\n\nvar main = createPlugin({\n    views: {\n        list: {\n            class: ListView,\n            buttonTextKey: 'list',\n            listDayFormat: { month: 'long', day: 'numeric', year: 'numeric' } // like \"January 1, 2016\"\n        },\n        listDay: {\n            type: 'list',\n            duration: { days: 1 },\n            listDayFormat: { weekday: 'long' } // day-of-week is all we need. full date is probably in header\n        },\n        listWeek: {\n            type: 'list',\n            duration: { weeks: 1 },\n            listDayFormat: { weekday: 'long' },\n            listDayAltFormat: { month: 'long', day: 'numeric', year: 'numeric' }\n        },\n        listMonth: {\n            type: 'list',\n            duration: { month: 1 },\n            listDayAltFormat: { weekday: 'long' } // day-of-week is nice-to-have\n        },\n        listYear: {\n            type: 'list',\n            duration: { year: 1 },\n            listDayAltFormat: { weekday: 'long' } // day-of-week is nice-to-have\n        }\n    }\n});\n\nexport default main;\nexport { ListView };\n"]},"metadata":{},"sourceType":"module"}