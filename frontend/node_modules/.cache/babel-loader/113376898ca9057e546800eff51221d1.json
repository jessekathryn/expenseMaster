{"ast":null,"code":"import Sortable from 'sortablejs';\nexport { MultiDrag, default as Sortable, Swap } from 'sortablejs';\nimport classNames from 'classnames';\nimport { createElement, Children, cloneElement, createRef, Component } from 'react';\nimport invariant from 'tiny-invariant';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\n\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n}\n/**\r\n * Removes the `node` from the DOM\r\n * @param node\r\n */\n\n\nfunction removeNode(node) {\n  if (node.parentElement !== null) node.parentElement.removeChild(node);\n}\n/**\r\n * Inserts the `newChild` node at the given index in a parent\r\n * @param parent The parent HTML Element.\r\n * @param newChild A HTML eement to add as a child of the parent.\r\n * @param index index of the parent to place the new child in.\r\n */\n\n\nfunction insertNodeAt(parent, newChild, index) {\n  var refChild = parent.children[index] || null;\n  parent.insertBefore(newChild, refChild);\n}\n\nfunction removeNodes(customs) {\n  customs.forEach(function (curr) {\n    return removeNode(curr.element);\n  });\n}\n\nfunction insertNodes(customs) {\n  customs.forEach(function (curr) {\n    insertNodeAt(curr.parentElement, curr.element, curr.oldIndex);\n  });\n}\n\nfunction createCustoms(evt, list) {\n  var mode = getMode(evt);\n  var parentElement = {\n    parentElement: evt.from\n  };\n  var custom = [];\n\n  switch (mode) {\n    case \"normal\":\n      var item = {\n        element: evt.item,\n        newIndex: evt.newIndex,\n        oldIndex: evt.oldIndex,\n        parentElement: evt.from\n      };\n      custom = [item];\n      break;\n\n    case \"swap\":\n      var drag = __assign({\n        element: evt.item,\n        oldIndex: evt.oldIndex,\n        newIndex: evt.newIndex\n      }, parentElement);\n\n      var swap = __assign({\n        element: evt.swapItem,\n        oldIndex: evt.newIndex,\n        newIndex: evt.oldIndex\n      }, parentElement);\n\n      custom = [drag, swap];\n      break;\n\n    case \"multidrag\":\n      custom = evt.oldIndicies.map(function (curr, index) {\n        return __assign({\n          element: curr.multiDragElement,\n          oldIndex: curr.index,\n          newIndex: evt.newIndicies[index].index\n        }, parentElement);\n      });\n      break;\n  }\n\n  var customs = createNormalized(custom, list);\n  return customs;\n}\n/** moves items form old index to new index without breaking anything ideally. */\n\n\nfunction handleStateChanges(normalized, list) {\n  var a = handleStateRemove(normalized, list);\n  var b = handleStateAdd(normalized, a);\n  return b;\n}\n\nfunction handleStateRemove(normalized, list) {\n  var newList = __spread(list);\n\n  normalized.concat().reverse().forEach(function (curr) {\n    return newList.splice(curr.oldIndex, 1);\n  });\n  return newList;\n}\n\nfunction handleStateAdd(normalized, list) {\n  var newList = __spread(list);\n\n  normalized.forEach(function (curr) {\n    return newList.splice(curr.newIndex, 0, curr.item);\n  });\n  return newList;\n}\n\nfunction getMode(evt) {\n  if (evt.oldIndicies && evt.oldIndicies.length > 0) return \"multidrag\";\n  if (evt.swapItem) return \"swap\";\n  return \"normal\";\n}\n\nfunction createNormalized(inputs, list) {\n  var normalized = inputs.map(function (curr) {\n    return __assign(__assign({}, curr), {\n      item: list[curr.oldIndex]\n    });\n  }).sort(function (a, b) {\n    return a.oldIndex - b.oldIndex;\n  });\n  return normalized;\n}\n/**\r\n * Removes the following group of properties from `props`,\r\n * leaving only `Sortable.Options` without any `on` methods.\r\n * @param props `ReactSortable.Props`\r\n */\n\n\nfunction destructurePropsForOptions(props) {\n  var // react sortable props\n  list = props.list,\n      setList = props.setList,\n      children = props.children,\n      tag = props.tag,\n      style = props.style,\n      className = props.className,\n      clone = props.clone,\n      // sortable options that have methods we want to overwrite\n  onAdd = props.onAdd,\n      onChange = props.onChange,\n      onChoose = props.onChoose,\n      onClone = props.onClone,\n      onEnd = props.onEnd,\n      onFilter = props.onFilter,\n      onRemove = props.onRemove,\n      onSort = props.onSort,\n      onStart = props.onStart,\n      onUnchoose = props.onUnchoose,\n      onUpdate = props.onUpdate,\n      onMove = props.onMove,\n      onSpill = props.onSpill,\n      onSelect = props.onSelect,\n      onDeselect = props.onDeselect,\n      options = __rest(props, [\"list\", \"setList\", \"children\", \"tag\", \"style\", \"className\", \"clone\", \"onAdd\", \"onChange\", \"onChoose\", \"onClone\", \"onEnd\", \"onFilter\", \"onRemove\", \"onSort\", \"onStart\", \"onUnchoose\", \"onUpdate\", \"onMove\", \"onSpill\", \"onSelect\", \"onDeselect\"]);\n\n  return options;\n}\n/** Holds a global reference for which react element is being dragged */\n// @todo - use context to manage this. How does one use 2 different providers?\n\n\nvar store = {\n  dragging: null\n};\n\nvar ReactSortable =\n/** @class */\nfunction (_super) {\n  __extends(ReactSortable, _super);\n\n  function ReactSortable(props) {\n    var _this = _super.call(this, props) || this; // @todo forward ref this component\n\n\n    _this.ref = createRef(); // make all state false because we can't change sortable unless a mouse gesture is made.\n\n    var newList = __spread(props.list).map(function (item) {\n      return __assign(__assign({}, item), {\n        chosen: false,\n        selected: false\n      });\n    });\n\n    props.setList(newList, _this.sortable, store);\n    invariant( //@ts-ignore\n    !props.plugins, \"\\nPlugins prop is no longer supported.\\nInstead, mount it with \\\"Sortable.mount(new MultiDrag())\\\"\\nPlease read the updated README.md at https://github.com/SortableJS/react-sortablejs.\\n      \");\n    return _this;\n  }\n\n  ReactSortable.prototype.componentDidMount = function () {\n    if (this.ref.current === null) return;\n    var newOptions = this.makeOptions();\n    Sortable.create(this.ref.current, newOptions);\n  };\n\n  ReactSortable.prototype.render = function () {\n    var _a = this.props,\n        tag = _a.tag,\n        style = _a.style,\n        className = _a.className,\n        id = _a.id;\n    var classicProps = {\n      style: style,\n      className: className,\n      id: id\n    }; // if no tag, default to a `div` element.\n\n    var newTag = !tag || tag === null ? \"div\" : tag;\n    return createElement(newTag, __assign({\n      // @todo - find a way (perhaps with the callback) to allow AntD components to work\n      ref: this.ref\n    }, classicProps), this.getChildren());\n  };\n\n  ReactSortable.prototype.getChildren = function () {\n    var _a = this.props,\n        children = _a.children,\n        dataIdAttr = _a.dataIdAttr,\n        _b = _a.selectedClass,\n        selectedClass = _b === void 0 ? \"sortable-selected\" : _b,\n        _c = _a.chosenClass,\n        chosenClass = _c === void 0 ? \"sortable-chosen\" : _c,\n        _d = _a.dragClass,\n        _e = _a.fallbackClass,\n        _f = _a.ghostClass,\n        _g = _a.swapClass,\n        _h = _a.filter,\n        filter = _h === void 0 ? \"sortable-filter\" : _h,\n        list = _a.list; // if no children, don't do anything.\n\n    if (!children || children == null) return null;\n    var dataid = dataIdAttr || \"data-id\";\n    return Children.map(children, function (child, index) {\n      var _a, _b, _c;\n\n      var item = list[index];\n      var prevClassName = child.props.className; // @todo - handle the function if avalable. I don't think anyone will be doing this soon.\n\n      var filtered = typeof filter === \"string\" && (_a = {}, _a[filter.replace(\".\", \"\")] = !!item.filtered, _a);\n      var className = classNames(prevClassName, __assign((_b = {}, _b[selectedClass] = item.selected, _b[chosenClass] = item.chosen, _b), filtered // [dragClass]: true,\n      // [fallbackClass]: true,\n      // [ghostClass]: true,\n      // [swapClass]: true\n      ));\n      return cloneElement(child, (_c = {}, _c[dataid] = child.key, _c.className = className, _c));\n    });\n  };\n\n  Object.defineProperty(ReactSortable.prototype, \"sortable\", {\n    /** Appends the `sortable` property to this component */\n    get: function () {\n      var el = this.ref.current;\n      if (el === null) return null;\n      var key = Object.keys(el).find(function (k) {\n        return k.includes(\"Sortable\");\n      });\n      if (!key) return null; //@ts-ignore - I know what I'm doing.\n\n      return el[key];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /** Converts all the props from `ReactSortable` into the `options` object that `Sortable.create(el, [options])` can use. */\n\n  ReactSortable.prototype.makeOptions = function () {\n    var _this = this;\n\n    var DOMHandlers = [\"onAdd\", \"onChoose\", \"onDeselect\", \"onEnd\", \"onRemove\", \"onSelect\", \"onSpill\", \"onStart\", \"onUnchoose\", \"onUpdate\"];\n    var NonDOMHandlers = [\"onChange\", \"onClone\", \"onFilter\", \"onSort\"];\n    var newOptions = destructurePropsForOptions(this.props);\n    DOMHandlers.forEach(function (name) {\n      return newOptions[name] = _this.prepareOnHandlerPropAndDOM(name);\n    });\n    NonDOMHandlers.forEach(function (name) {\n      return newOptions[name] = _this.prepareOnHandlerProp(name);\n    });\n    /** onMove has 2 arguments and needs to be handled seperately. */\n\n    var onMove = function (evt, originalEvt) {\n      var onMove = _this.props.onMove;\n      var defaultValue = evt.willInsertAfter || -1;\n      if (!onMove) return defaultValue;\n      var result = onMove(evt, originalEvt, _this.sortable, store);\n      if (typeof result === 'undefined') return false;\n      return result;\n    };\n\n    return __assign(__assign({}, newOptions), {\n      onMove: onMove\n    });\n  };\n  /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop & an `on[Handler]` ReactSortable method.  */\n\n\n  ReactSortable.prototype.prepareOnHandlerPropAndDOM = function (evtName) {\n    var _this = this;\n\n    return function (evt) {\n      // call the component prop\n      _this.callOnHandlerProp(evt, evtName); // calls state change\n      //@ts-ignore - until @types multidrag item is in\n\n\n      _this[evtName](evt);\n    };\n  };\n  /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop */\n\n\n  ReactSortable.prototype.prepareOnHandlerProp = function (evtName) {\n    var _this = this;\n\n    return function (evt) {\n      // call the component prop\n      _this.callOnHandlerProp(evt, evtName);\n    };\n  };\n  /** Calls the `props.on[Handler]` function */\n\n\n  ReactSortable.prototype.callOnHandlerProp = function (evt, evtName) {\n    var propEvent = this.props[evtName];\n    if (propEvent) propEvent(evt, this.sortable, store);\n  }; // SORTABLE DOM HANDLING\n\n\n  ReactSortable.prototype.onAdd = function (evt) {\n    var _a = this.props,\n        list = _a.list,\n        setList = _a.setList;\n\n    var otherList = __spread(store.dragging.props.list);\n\n    var customs = createCustoms(evt, otherList);\n    removeNodes(customs);\n    var newList = handleStateAdd(customs, list);\n    setList(newList, this.sortable, store);\n  };\n\n  ReactSortable.prototype.onRemove = function (evt) {\n    var _this = this;\n\n    var _a = this.props,\n        list = _a.list,\n        setList = _a.setList;\n    var mode = getMode(evt);\n    var customs = createCustoms(evt, list);\n    insertNodes(customs);\n\n    var newList = __spread(list); // remove state if not in clone mode. otherwise, keep.\n\n\n    if (evt.pullMode !== \"clone\") newList = handleStateRemove(customs, newList); // if clone, it doesn't really remove. instead it clones in place.\n    // @todo -\n    else {\n        // switch used to get the clone\n        var customClones = customs;\n\n        switch (mode) {\n          case \"multidrag\":\n            customClones = customs.map(function (item, index) {\n              return __assign(__assign({}, item), {\n                element: evt.clones[index]\n              });\n            });\n            break;\n\n          case \"normal\":\n            customClones = customs.map(function (item, index) {\n              return __assign(__assign({}, item), {\n                element: evt.clone\n              });\n            });\n            break;\n\n          case \"swap\":\n          default:\n            {\n              invariant(true, \"mode \\\"\" + mode + \"\\\" cannot clone. Please remove \\\"props.clone\\\" from <ReactSortable/> when using the \\\"\" + mode + \"\\\" plugin\");\n            }\n        }\n\n        removeNodes(customClones); // replace selected items with cloned items\n\n        customs.forEach(function (curr) {\n          var index = curr.oldIndex;\n\n          var newItem = _this.props.clone(curr.item, evt);\n\n          newList.splice(index, 1, newItem);\n        });\n      } // remove item.selected from list\n\n    newList = newList.map(function (item) {\n      return __assign(__assign({}, item), {\n        selected: false\n      });\n    });\n    setList(newList, this.sortable, store);\n  };\n\n  ReactSortable.prototype.onUpdate = function (evt) {\n    var _a = this.props,\n        list = _a.list,\n        setList = _a.setList;\n    var customs = createCustoms(evt, list);\n    removeNodes(customs);\n    insertNodes(customs);\n    var newList = handleStateChanges(customs, list);\n    return setList(newList, this.sortable, store);\n  };\n\n  ReactSortable.prototype.onStart = function (evt) {\n    store.dragging = this;\n  };\n\n  ReactSortable.prototype.onEnd = function (evt) {\n    store.dragging = null;\n  };\n\n  ReactSortable.prototype.onChoose = function (evt) {\n    var _a = this.props,\n        list = _a.list,\n        setList = _a.setList;\n\n    var newList = __spread(list);\n\n    newList[evt.oldIndex].chosen = true;\n    setList(newList, this.sortable, store);\n  };\n\n  ReactSortable.prototype.onUnchoose = function (evt) {\n    var _a = this.props,\n        list = _a.list,\n        setList = _a.setList;\n\n    var newList = __spread(list);\n\n    newList[evt.oldIndex].chosen = false;\n    setList(newList, this.sortable, store);\n  };\n\n  ReactSortable.prototype.onSpill = function (evt) {\n    var _a = this.props,\n        removeOnSpill = _a.removeOnSpill,\n        revertOnSpill = _a.revertOnSpill;\n    if (removeOnSpill && !revertOnSpill) removeNode(evt.item);\n  };\n\n  ReactSortable.prototype.onSelect = function (evt) {\n    var _a = this.props,\n        list = _a.list,\n        setList = _a.setList;\n\n    var newList = __spread(list).map(function (item) {\n      return __assign(__assign({}, item), {\n        selected: false\n      });\n    });\n\n    evt.newIndicies.forEach(function (curr) {\n      var index = curr.index;\n\n      if (index === -1) {\n        console.log(\"\\\"\" + evt.type + \"\\\" had indice of \\\"\" + curr.index + \"\\\", which is probably -1 and doesn't usually happen here.\");\n        console.log(evt);\n        return;\n      }\n\n      newList[index].selected = true;\n    });\n    setList(newList, this.sortable, store);\n  };\n\n  ReactSortable.prototype.onDeselect = function (evt) {\n    var _a = this.props,\n        list = _a.list,\n        setList = _a.setList;\n\n    var newList = __spread(list).map(function (item) {\n      return __assign(__assign({}, item), {\n        selected: false\n      });\n    });\n\n    evt.newIndicies.forEach(function (curr) {\n      var index = curr.index;\n      if (index === -1) return;\n      newList[index].selected = true;\n    });\n    setList(newList, this.sortable, store);\n  };\n\n  ReactSortable.defaultProps = {\n    clone: function (item) {\n      return item;\n    }\n  };\n  return ReactSortable;\n}(Component);\n\nexport { ReactSortable };","map":{"version":3,"sources":["/Users/jessebarnes/expenseMaster/frontend/node_modules/react-sortablejs/dist/index.es.js"],"names":["Sortable","MultiDrag","default","Swap","classNames","createElement","Children","cloneElement","createRef","Component","invariant","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__read","o","m","Symbol","iterator","r","ar","next","done","push","value","error","__spread","concat","removeNode","node","parentElement","removeChild","insertNodeAt","parent","newChild","index","refChild","children","insertBefore","removeNodes","customs","forEach","curr","element","insertNodes","oldIndex","createCustoms","evt","list","mode","getMode","from","custom","item","newIndex","drag","swap","swapItem","oldIndicies","map","multiDragElement","newIndicies","createNormalized","handleStateChanges","normalized","a","handleStateRemove","handleStateAdd","newList","reverse","splice","inputs","sort","destructurePropsForOptions","props","setList","tag","style","className","clone","onAdd","onChange","onChoose","onClone","onEnd","onFilter","onRemove","onSort","onStart","onUnchoose","onUpdate","onMove","onSpill","onSelect","onDeselect","options","store","dragging","ReactSortable","_super","_this","ref","chosen","selected","sortable","plugins","componentDidMount","current","newOptions","makeOptions","render","_a","id","classicProps","newTag","getChildren","dataIdAttr","_b","selectedClass","_c","chosenClass","_d","dragClass","_e","fallbackClass","_f","ghostClass","_g","swapClass","_h","filter","dataid","child","prevClassName","filtered","replace","key","defineProperty","get","el","keys","find","k","includes","enumerable","configurable","DOMHandlers","NonDOMHandlers","name","prepareOnHandlerPropAndDOM","prepareOnHandlerProp","originalEvt","defaultValue","willInsertAfter","result","evtName","callOnHandlerProp","propEvent","otherList","pullMode","customClones","clones","newItem","removeOnSpill","revertOnSpill","console","log","type","defaultProps"],"mappings":"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","sourcesContent":["import Sortable from 'sortablejs';\nexport { MultiDrag, default as Sortable, Swap } from 'sortablejs';\nimport classNames from 'classnames';\nimport { createElement, Children, cloneElement, createRef, Component } from 'react';\nimport invariant from 'tiny-invariant';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\n/**\r\n * Removes the `node` from the DOM\r\n * @param node\r\n */\r\nfunction removeNode(node) {\r\n    if (node.parentElement !== null)\r\n        node.parentElement.removeChild(node);\r\n}\r\n/**\r\n * Inserts the `newChild` node at the given index in a parent\r\n * @param parent The parent HTML Element.\r\n * @param newChild A HTML eement to add as a child of the parent.\r\n * @param index index of the parent to place the new child in.\r\n */\r\nfunction insertNodeAt(parent, newChild, index) {\r\n    var refChild = parent.children[index] || null;\r\n    parent.insertBefore(newChild, refChild);\r\n}\r\nfunction removeNodes(customs) {\r\n    customs.forEach(function (curr) { return removeNode(curr.element); });\r\n}\r\nfunction insertNodes(customs) {\r\n    customs.forEach(function (curr) {\r\n        insertNodeAt(curr.parentElement, curr.element, curr.oldIndex);\r\n    });\r\n}\r\nfunction createCustoms(evt, list) {\r\n    var mode = getMode(evt);\r\n    var parentElement = { parentElement: evt.from };\r\n    var custom = [];\r\n    switch (mode) {\r\n        case \"normal\":\r\n            var item = {\r\n                element: evt.item,\r\n                newIndex: evt.newIndex,\r\n                oldIndex: evt.oldIndex,\r\n                parentElement: evt.from\r\n            };\r\n            custom = [item];\r\n            break;\r\n        case \"swap\":\r\n            var drag = __assign({ element: evt.item, oldIndex: evt.oldIndex, newIndex: evt.newIndex }, parentElement);\r\n            var swap = __assign({ element: evt.swapItem, oldIndex: evt.newIndex, newIndex: evt.oldIndex }, parentElement);\r\n            custom = [drag, swap];\r\n            break;\r\n        case \"multidrag\":\r\n            custom = evt.oldIndicies.map(function (curr, index) { return (__assign({ element: curr.multiDragElement, oldIndex: curr.index, newIndex: evt.newIndicies[index].index }, parentElement)); });\r\n            break;\r\n    }\r\n    var customs = createNormalized(custom, list);\r\n    return customs;\r\n}\r\n/** moves items form old index to new index without breaking anything ideally. */\r\nfunction handleStateChanges(normalized, list) {\r\n    var a = handleStateRemove(normalized, list);\r\n    var b = handleStateAdd(normalized, a);\r\n    return b;\r\n}\r\nfunction handleStateRemove(normalized, list) {\r\n    var newList = __spread(list);\r\n    normalized\r\n        .concat()\r\n        .reverse()\r\n        .forEach(function (curr) { return newList.splice(curr.oldIndex, 1); });\r\n    return newList;\r\n}\r\nfunction handleStateAdd(normalized, list) {\r\n    var newList = __spread(list);\r\n    normalized.forEach(function (curr) { return newList.splice(curr.newIndex, 0, curr.item); });\r\n    return newList;\r\n}\r\nfunction getMode(evt) {\r\n    if (evt.oldIndicies && evt.oldIndicies.length > 0)\r\n        return \"multidrag\";\r\n    if (evt.swapItem)\r\n        return \"swap\";\r\n    return \"normal\";\r\n}\r\nfunction createNormalized(inputs, list) {\r\n    var normalized = inputs\r\n        .map(function (curr) { return (__assign(__assign({}, curr), { item: list[curr.oldIndex] })); })\r\n        .sort(function (a, b) { return a.oldIndex - b.oldIndex; });\r\n    return normalized;\r\n}\r\n/**\r\n * Removes the following group of properties from `props`,\r\n * leaving only `Sortable.Options` without any `on` methods.\r\n * @param props `ReactSortable.Props`\r\n */\r\nfunction destructurePropsForOptions(props) {\r\n    var \r\n    // react sortable props\r\n    list = props.list, setList = props.setList, children = props.children, tag = props.tag, style = props.style, className = props.className, clone = props.clone, \r\n    // sortable options that have methods we want to overwrite\r\n    onAdd = props.onAdd, onChange = props.onChange, onChoose = props.onChoose, onClone = props.onClone, onEnd = props.onEnd, onFilter = props.onFilter, onRemove = props.onRemove, onSort = props.onSort, onStart = props.onStart, onUnchoose = props.onUnchoose, onUpdate = props.onUpdate, onMove = props.onMove, onSpill = props.onSpill, onSelect = props.onSelect, onDeselect = props.onDeselect, options = __rest(props, [\"list\", \"setList\", \"children\", \"tag\", \"style\", \"className\", \"clone\", \"onAdd\", \"onChange\", \"onChoose\", \"onClone\", \"onEnd\", \"onFilter\", \"onRemove\", \"onSort\", \"onStart\", \"onUnchoose\", \"onUpdate\", \"onMove\", \"onSpill\", \"onSelect\", \"onDeselect\"]);\r\n    return options;\r\n}\n\n/** Holds a global reference for which react element is being dragged */\r\n// @todo - use context to manage this. How does one use 2 different providers?\r\nvar store = { dragging: null };\r\nvar ReactSortable = /** @class */ (function (_super) {\r\n    __extends(ReactSortable, _super);\r\n    function ReactSortable(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        // @todo forward ref this component\r\n        _this.ref = createRef();\r\n        // make all state false because we can't change sortable unless a mouse gesture is made.\r\n        var newList = __spread(props.list).map(function (item) { return (__assign(__assign({}, item), { chosen: false, selected: false })); });\r\n        props.setList(newList, _this.sortable, store);\r\n        invariant(\r\n        //@ts-ignore\r\n        !props.plugins, \"\\nPlugins prop is no longer supported.\\nInstead, mount it with \\\"Sortable.mount(new MultiDrag())\\\"\\nPlease read the updated README.md at https://github.com/SortableJS/react-sortablejs.\\n      \");\r\n        return _this;\r\n    }\r\n    ReactSortable.prototype.componentDidMount = function () {\r\n        if (this.ref.current === null)\r\n            return;\r\n        var newOptions = this.makeOptions();\r\n        Sortable.create(this.ref.current, newOptions);\r\n    };\r\n    ReactSortable.prototype.render = function () {\r\n        var _a = this.props, tag = _a.tag, style = _a.style, className = _a.className, id = _a.id;\r\n        var classicProps = { style: style, className: className, id: id };\r\n        // if no tag, default to a `div` element.\r\n        var newTag = !tag || tag === null ? \"div\" : tag;\r\n        return createElement(newTag, __assign({ \r\n            // @todo - find a way (perhaps with the callback) to allow AntD components to work\r\n            ref: this.ref }, classicProps), this.getChildren());\r\n    };\r\n    ReactSortable.prototype.getChildren = function () {\r\n        var _a = this.props, children = _a.children, dataIdAttr = _a.dataIdAttr, _b = _a.selectedClass, selectedClass = _b === void 0 ? \"sortable-selected\" : _b, _c = _a.chosenClass, chosenClass = _c === void 0 ? \"sortable-chosen\" : _c, _d = _a.dragClass, _e = _a.fallbackClass, _f = _a.ghostClass, _g = _a.swapClass, _h = _a.filter, filter = _h === void 0 ? \"sortable-filter\" : _h, list = _a.list;\r\n        // if no children, don't do anything.\r\n        if (!children || children == null)\r\n            return null;\r\n        var dataid = dataIdAttr || \"data-id\";\r\n        return Children.map(children, function (child, index) {\r\n            var _a, _b, _c;\r\n            var item = list[index];\r\n            var prevClassName = child.props.className;\r\n            // @todo - handle the function if avalable. I don't think anyone will be doing this soon.\r\n            var filtered = typeof filter === \"string\" && (_a = {},\r\n                _a[filter.replace(\".\", \"\")] = !!item.filtered,\r\n                _a);\r\n            var className = classNames(prevClassName, __assign((_b = {}, _b[selectedClass] = item.selected, _b[chosenClass] = item.chosen, _b), filtered\r\n            // [dragClass]: true,\r\n            // [fallbackClass]: true,\r\n            // [ghostClass]: true,\r\n            // [swapClass]: true\r\n            ));\r\n            return cloneElement(child, (_c = {},\r\n                _c[dataid] = child.key,\r\n                _c.className = className,\r\n                _c));\r\n        });\r\n    };\r\n    Object.defineProperty(ReactSortable.prototype, \"sortable\", {\r\n        /** Appends the `sortable` property to this component */\r\n        get: function () {\r\n            var el = this.ref.current;\r\n            if (el === null)\r\n                return null;\r\n            var key = Object.keys(el).find(function (k) { return k.includes(\"Sortable\"); });\r\n            if (!key)\r\n                return null;\r\n            //@ts-ignore - I know what I'm doing.\r\n            return el[key];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** Converts all the props from `ReactSortable` into the `options` object that `Sortable.create(el, [options])` can use. */\r\n    ReactSortable.prototype.makeOptions = function () {\r\n        var _this = this;\r\n        var DOMHandlers = [\r\n            \"onAdd\",\r\n            \"onChoose\",\r\n            \"onDeselect\",\r\n            \"onEnd\",\r\n            \"onRemove\",\r\n            \"onSelect\",\r\n            \"onSpill\",\r\n            \"onStart\",\r\n            \"onUnchoose\",\r\n            \"onUpdate\"\r\n        ];\r\n        var NonDOMHandlers = [\r\n            \"onChange\",\r\n            \"onClone\",\r\n            \"onFilter\",\r\n            \"onSort\"\r\n        ];\r\n        var newOptions = destructurePropsForOptions(this.props);\r\n        DOMHandlers.forEach(function (name) { return (newOptions[name] = _this.prepareOnHandlerPropAndDOM(name)); });\r\n        NonDOMHandlers.forEach(function (name) { return (newOptions[name] = _this.prepareOnHandlerProp(name)); });\r\n        /** onMove has 2 arguments and needs to be handled seperately. */\r\n        var onMove = function (evt, originalEvt) {\r\n            var onMove = _this.props.onMove;\r\n            var defaultValue = evt.willInsertAfter || -1;\r\n            if (!onMove)\r\n                return defaultValue;\r\n            var result = onMove(evt, originalEvt, _this.sortable, store);\r\n            if (typeof result === 'undefined')\r\n                return false;\r\n            return result;\r\n        };\r\n        return __assign(__assign({}, newOptions), { onMove: onMove });\r\n    };\r\n    /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop & an `on[Handler]` ReactSortable method.  */\r\n    ReactSortable.prototype.prepareOnHandlerPropAndDOM = function (evtName) {\r\n        var _this = this;\r\n        return function (evt) {\r\n            // call the component prop\r\n            _this.callOnHandlerProp(evt, evtName);\r\n            // calls state change\r\n            //@ts-ignore - until @types multidrag item is in\r\n            _this[evtName](evt);\r\n        };\r\n    };\r\n    /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop */\r\n    ReactSortable.prototype.prepareOnHandlerProp = function (evtName) {\r\n        var _this = this;\r\n        return function (evt) {\r\n            // call the component prop\r\n            _this.callOnHandlerProp(evt, evtName);\r\n        };\r\n    };\r\n    /** Calls the `props.on[Handler]` function */\r\n    ReactSortable.prototype.callOnHandlerProp = function (evt, evtName) {\r\n        var propEvent = this.props[evtName];\r\n        if (propEvent)\r\n            propEvent(evt, this.sortable, store);\r\n    };\r\n    // SORTABLE DOM HANDLING\r\n    ReactSortable.prototype.onAdd = function (evt) {\r\n        var _a = this.props, list = _a.list, setList = _a.setList;\r\n        var otherList = __spread(store.dragging.props.list);\r\n        var customs = createCustoms(evt, otherList);\r\n        removeNodes(customs);\r\n        var newList = handleStateAdd(customs, list);\r\n        setList(newList, this.sortable, store);\r\n    };\r\n    ReactSortable.prototype.onRemove = function (evt) {\r\n        var _this = this;\r\n        var _a = this.props, list = _a.list, setList = _a.setList;\r\n        var mode = getMode(evt);\r\n        var customs = createCustoms(evt, list);\r\n        insertNodes(customs);\r\n        var newList = __spread(list);\r\n        // remove state if not in clone mode. otherwise, keep.\r\n        if (evt.pullMode !== \"clone\")\r\n            newList = handleStateRemove(customs, newList);\r\n        // if clone, it doesn't really remove. instead it clones in place.\r\n        // @todo -\r\n        else {\r\n            // switch used to get the clone\r\n            var customClones = customs;\r\n            switch (mode) {\r\n                case \"multidrag\":\r\n                    customClones = customs.map(function (item, index) { return (__assign(__assign({}, item), { element: evt.clones[index] })); });\r\n                    break;\r\n                case \"normal\":\r\n                    customClones = customs.map(function (item, index) { return (__assign(__assign({}, item), { element: evt.clone })); });\r\n                    break;\r\n                case \"swap\":\r\n                default: {\r\n                    invariant(true, \"mode \\\"\" + mode + \"\\\" cannot clone. Please remove \\\"props.clone\\\" from <ReactSortable/> when using the \\\"\" + mode + \"\\\" plugin\");\r\n                }\r\n            }\r\n            removeNodes(customClones);\r\n            // replace selected items with cloned items\r\n            customs.forEach(function (curr) {\r\n                var index = curr.oldIndex;\r\n                var newItem = _this.props.clone(curr.item, evt);\r\n                newList.splice(index, 1, newItem);\r\n            });\r\n        }\r\n        // remove item.selected from list\r\n        newList = newList.map(function (item) { return (__assign(__assign({}, item), { selected: false })); });\r\n        setList(newList, this.sortable, store);\r\n    };\r\n    ReactSortable.prototype.onUpdate = function (evt) {\r\n        var _a = this.props, list = _a.list, setList = _a.setList;\r\n        var customs = createCustoms(evt, list);\r\n        removeNodes(customs);\r\n        insertNodes(customs);\r\n        var newList = handleStateChanges(customs, list);\r\n        return setList(newList, this.sortable, store);\r\n    };\r\n    ReactSortable.prototype.onStart = function (evt) {\r\n        store.dragging = this;\r\n    };\r\n    ReactSortable.prototype.onEnd = function (evt) {\r\n        store.dragging = null;\r\n    };\r\n    ReactSortable.prototype.onChoose = function (evt) {\r\n        var _a = this.props, list = _a.list, setList = _a.setList;\r\n        var newList = __spread(list);\r\n        newList[evt.oldIndex].chosen = true;\r\n        setList(newList, this.sortable, store);\r\n    };\r\n    ReactSortable.prototype.onUnchoose = function (evt) {\r\n        var _a = this.props, list = _a.list, setList = _a.setList;\r\n        var newList = __spread(list);\r\n        newList[evt.oldIndex].chosen = false;\r\n        setList(newList, this.sortable, store);\r\n    };\r\n    ReactSortable.prototype.onSpill = function (evt) {\r\n        var _a = this.props, removeOnSpill = _a.removeOnSpill, revertOnSpill = _a.revertOnSpill;\r\n        if (removeOnSpill && !revertOnSpill)\r\n            removeNode(evt.item);\r\n    };\r\n    ReactSortable.prototype.onSelect = function (evt) {\r\n        var _a = this.props, list = _a.list, setList = _a.setList;\r\n        var newList = __spread(list).map(function (item) { return (__assign(__assign({}, item), { selected: false })); });\r\n        evt.newIndicies.forEach(function (curr) {\r\n            var index = curr.index;\r\n            if (index === -1) {\r\n                console.log(\"\\\"\" + evt.type + \"\\\" had indice of \\\"\" + curr.index + \"\\\", which is probably -1 and doesn't usually happen here.\");\r\n                console.log(evt);\r\n                return;\r\n            }\r\n            newList[index].selected = true;\r\n        });\r\n        setList(newList, this.sortable, store);\r\n    };\r\n    ReactSortable.prototype.onDeselect = function (evt) {\r\n        var _a = this.props, list = _a.list, setList = _a.setList;\r\n        var newList = __spread(list).map(function (item) { return (__assign(__assign({}, item), { selected: false })); });\r\n        evt.newIndicies.forEach(function (curr) {\r\n            var index = curr.index;\r\n            if (index === -1)\r\n                return;\r\n            newList[index].selected = true;\r\n        });\r\n        setList(newList, this.sortable, store);\r\n    };\r\n    ReactSortable.defaultProps = {\r\n        clone: function (item) { return item; }\r\n    };\r\n    return ReactSortable;\r\n}(Component));\n\nexport { ReactSortable };\n"]},"metadata":{},"sourceType":"module"}