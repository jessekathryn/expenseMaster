{"ast":null,"code":"var _jsxFileName = \"/Users/jessebarnes/expenseMaster/frontend/src/components/Profiles.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Profiles extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      only2020: false,\n      allSorted: false\n    };\n\n    this.handleSort = event => {\n      console.log(event);\n      this.setState({\n        allSorted: !this.state.allSorted\n      });\n    };\n\n    this.handleOnClick2020 = event => {\n      console.log(event);\n      this.setState({\n        only2020: !this.state.only2020\n      });\n    };\n\n    this.upVote = id => {\n      this.state[id] ? this.setState({\n        [id]: this.state[id] + 1\n      }) : this.setState({\n        [id]: 1\n      });\n    };\n\n    this.handleOnClick = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  render() {\n    let displayProfiles = this.props.profiles;\n\n    if (this.state.only2020) {\n      displayProfiles = this.props.profiles.filter(profile => profile.name.includes('2020'));\n    }\n\n    if (this.state.allSorted) {\n      displayProfiles = this.props.profiles.sort(function (a, b) {\n        const nameA = a.name.toUpperCase();\n        const nameB = b.name.toUpperCase();\n\n        if (nameA < nameB) {\n          return -1;\n        }\n\n        if (nameA > nameB) {\n          return 1;\n        }\n\n        return 0;\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.handleSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 4\n      }\n    }, this.state.allSorted ? 'Sorted' : 'Sort'), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.handleOnClick2020,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 4\n      }\n    }, this.state.only2020 ? 'All' : '2020'), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 4\n      }\n    }, \"$ Profiles \"), displayProfiles.map(profile => /*#__PURE__*/React.createElement(\"div\", {\n      key: profile.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/profiles/${profile.id}`,\n      style: {\n        color: \"light green\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }\n    }, profile.name), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: () => this.upVote(profile.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }\n    }, \"Like \", this.state[profile.id] ? this.state[profile.id] : 0))));\n  }\n\n}\n\nexport default Profiles;","map":{"version":3,"sources":["/Users/jessebarnes/expenseMaster/frontend/src/components/Profiles.js"],"names":["React","Link","Profiles","Component","state","only2020","allSorted","handleSort","event","console","log","setState","handleOnClick2020","upVote","id","handleOnClick","target","name","value","render","displayProfiles","props","profiles","filter","profile","includes","sort","a","b","nameA","toUpperCase","nameB","map","color"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Profiles extends React.Component {\n\tstate = {\t\n\t only2020: false,\n\t allSorted: false\n\t};\n\n\thandleSort = (event) => {\n\t\tconsole.log(event)\n\t\tthis.setState({\n\t\t\tallSorted: !this.state.allSorted\n\t\t})\n\t}\n\n\thandleOnClick2020 = (event) => {\n\t\tconsole.log(event)\n\t\tthis.setState({\n\t\t\tonly2020: !this.state.only2020\n\t\t})\n\t}\n\n\tupVote = (id) => {\n\t\tthis.state[id]\n\t\t\t? this.setState({ [id]: (this.state[id] + 1) })\n\t\t\t: this.setState({ [id]: 1 });\n\t};\n\n\thandleOnClick = (event) => {\n\t\tthis.setState({\n\t\t\t[event.target.name]: event.target.value,\n\t\t});\n\t};\n\nrender() {\n\tlet displayProfiles = this.props.profiles;\n\tif (this.state.only2020) {\n\t\tdisplayProfiles= this.props.profiles.filter(profile => profile.name.includes('2020'))\n\t\t}\n\t\n\tif (this.state.allSorted){\n\t\tdisplayProfiles= this.props.profiles.sort(function(a, b) {\n\t\t\tconst nameA = a.name.toUpperCase(); \n\t\t\tconst nameB = b.name.toUpperCase(); \n\t\t\tif (nameA < nameB) {\n\t\t\t  return -1;\n\t\t\t}\n\t\t\tif (nameA > nameB) {\n\t\t\t  return 1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t  });\n\t\t}\n\t\t\n\t\t\n\treturn (\n\t\t<div>\n\t\t\t<button className=\"btn btn-success\" onClick={this.handleSort}>\n\t\t\t\t{this.state.allSorted ? 'Sorted' : 'Sort'}\n\t\t\t</button>\n\t\t\t<button className=\"btn btn-success\" onClick={this.handleOnClick2020}>\n\t\t\t\t{this.state.only2020 ? 'All' : '2020'}\n\t\t\t</button>\n\t\t\t<h4>$ Profiles </h4>\n\n\t\t\t{displayProfiles.map((profile) => (\n\t\t\t\t<div key={profile.id}>\n\t\t\t\t<Link to={`/profiles/${profile.id}`} style={{color: \"light green\"}}>\n\t\t\t\t\t{profile.name} \n\t\t\t\t</Link> \n\t\t\t\t<br></br>\n\t\t\t\t<button className=\"btn btn-primary\" onClick={() => this.upVote(profile.id)}>\n\t\t\t\tLike {this.state[profile.id] ? this.state[profile.id] : 0}</button>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\t\n}\n\nexport default Profiles;"]},"metadata":{},"sourceType":"module"}