{"ast":null,"code":"var _jsxFileName = \"/Users/jessebarnes/expenseMaster/frontend/src/components/RichTextEditor.js\";\nimport React, { Component } from 'react';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nclass RichTextEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onEditorStateChange = editorState => {\n      this.setState({\n        editorState\n      });\n      const body = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n      this.props.onEditorContentChange && this.props.onEditorContentChange(body);\n    };\n\n    this.state = {\n      editorState: EditorState.createEmpty()\n    };\n    this.onEditorStateChange = this.onEditorStateChange.bind(this);\n  }\n\n  componentDidMount(prevProps) {\n    if (this.props.initialContent) {\n      const {\n        contentBlocks,\n        entityMap\n      } = htmlToDraft(this.props.initialContent);\n      const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\n      this.setState({\n        editorState: EditorState.createWithContent(contentState)\n      });\n    }\n  }\n  /**\n   * On editor body change\n   */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Editor, {\n      editorState: this.state.editorState,\n      wrapperClassName: \"rich-editor-wrapper\",\n      editorClassName: \"rich-editor\",\n      onEditorStateChange: this.onEditorStateChange,\n      toolbarClassName: this.props.hideToolbar ? 'hide-toolbar' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default RichTextEditor;","map":{"version":3,"sources":["/Users/jessebarnes/expenseMaster/frontend/src/components/RichTextEditor.js"],"names":["React","Component","EditorState","convertToRaw","ContentState","Editor","draftToHtml","htmlToDraft","RichTextEditor","constructor","props","onEditorStateChange","editorState","setState","body","getCurrentContent","onEditorContentChange","state","createEmpty","bind","componentDidMount","prevProps","initialContent","contentBlocks","entityMap","contentState","createFromBlockArray","createWithContent","render","hideToolbar"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,YAApC,QAAwD,UAAxD;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAO,kDAAP;;AAEA,MAAMC,cAAN,SAA6BP,SAA7B,CAAuC;AACnCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAqBnBC,mBArBmB,GAqBIC,WAAD,IAAiB;AACnC,WAAKC,QAAL,CAAc;AACVD,QAAAA;AADU,OAAd;AAGA,YAAME,IAAI,GAAGR,WAAW,CAACH,YAAY,CAACS,WAAW,CAACG,iBAAZ,EAAD,CAAb,CAAxB;AACA,WAAKL,KAAL,CAAWM,qBAAX,IAAoC,KAAKN,KAAL,CAAWM,qBAAX,CAAiCF,IAAjC,CAApC;AACH,KA3BkB;;AAGf,SAAKG,KAAL,GAAa;AACTL,MAAAA,WAAW,EAAEV,WAAW,CAACgB,WAAZ;AADJ,KAAb;AAIA,SAAKP,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBQ,IAAzB,CAA8B,IAA9B,CAA3B;AACH;;AAEDC,EAAAA,iBAAiB,CAACC,SAAD,EAAY;AACzB,QAAI,KAAKX,KAAL,CAAWY,cAAf,EAA+B;AAC3B,YAAM;AAAEC,QAAAA,aAAF;AAAiBC,QAAAA;AAAjB,UAA+BjB,WAAW,CAAC,KAAKG,KAAL,CAAWY,cAAZ,CAAhD;AACA,YAAMG,YAAY,GAAGrB,YAAY,CAACsB,oBAAb,CAAkCH,aAAlC,EAAiDC,SAAjD,CAArB;AACA,WAAKX,QAAL,CAAc;AAAED,QAAAA,WAAW,EAAEV,WAAW,CAACyB,iBAAZ,CAA8BF,YAA9B;AAAf,OAAd;AACH;AACJ;AAED;;;;;AAWAG,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,MAAD;AACI,MAAA,WAAW,EAAE,KAAKX,KAAL,CAAWL,WAD5B;AAEI,MAAA,gBAAgB,EAAC,qBAFrB;AAGI,MAAA,eAAe,EAAC,aAHpB;AAII,MAAA,mBAAmB,EAAE,KAAKD,mBAJ9B;AAKI,MAAA,gBAAgB,EAAE,KAAKD,KAAL,CAAWmB,WAAX,GAAyB,cAAzB,GAA0C,EALhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAaH;;AA5CkC;;AAgDvC,eAAerB,cAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg'\nimport draftToHtml from 'draftjs-to-html';\nimport htmlToDraft from 'html-to-draftjs';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\n\nclass RichTextEditor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editorState: EditorState.createEmpty(),\n        };\n\n        this.onEditorStateChange = this.onEditorStateChange.bind(this);\n    }\n\n    componentDidMount(prevProps) {\n        if (this.props.initialContent) {\n            const { contentBlocks, entityMap } = htmlToDraft(this.props.initialContent);\n            const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\n            this.setState({ editorState: EditorState.createWithContent(contentState) });\n        }\n    }\n\n    /**\n     * On editor body change\n     */\n    onEditorStateChange = (editorState) => {\n        this.setState({\n            editorState,\n        });\n        const body = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n        this.props.onEditorContentChange && this.props.onEditorContentChange(body);\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <Editor\n                    editorState={this.state.editorState}\n                    wrapperClassName=\"rich-editor-wrapper\"\n                    editorClassName=\"rich-editor\"\n                    onEditorStateChange={this.onEditorStateChange}\n                    toolbarClassName={this.props.hideToolbar ? 'hide-toolbar' : ''}\n                />\n\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default RichTextEditor;"]},"metadata":{},"sourceType":"module"}